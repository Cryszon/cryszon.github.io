---
interface Segment {
  url: string;
  title: string;
}

interface Props {
  /**
   * Additional segments after "Home". Uses title cased URL segments by default.
   */
  additionalSegments?: Segment[];
  class?: string | undefined;
}

let { additionalSegments, class: className } = Astro.props;

let segments = [
  {
    title: "home",
    url: "/",
  },
];

// Construct breadcrumb segments from URL if none were passed in the prop.
if (additionalSegments === undefined) {
  additionalSegments = [];

  const urlSegments = Astro.url.pathname.split("/");
  let currentPath = "/";
  additionalSegments = urlSegments
    // Ignore empty segments (first segment)
    .filter((x) => x)
    .map((segment) => {
      currentPath += segment + "/";
      return {
        url: currentPath,
        title: segment,
      };
    });
}

segments = [...segments, ...additionalSegments];
---

<nav aria-label="breadcrumb" class={className}>
  <ul class="flex list-['/']">
    {
      segments.map((segment) => (
        <li class="ml-4 pl-2">
          <a href={segment.url}>{segment.title}</a>{" "}
        </li>
      ))
    }
  </ul>
</nav>
