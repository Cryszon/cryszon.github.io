---
import { getCollection } from "astro:content";
import ToolsGridItem from "../components/ToolsGridItem.astro";
import { sortBy } from "es-toolkit";
import DefaultPageLayout from "../layouts/DefaultPageLayout.astro";
import LinkOrText from "../components/LinkOrText.astro";

// TODO - Maybe sort manually instead of alphabetically?

const allTools = sortBy(await getCollection("tools"), ["id"]);

type Tool = (typeof allTools)[number];

const mainTools: Tool[] = [];
const subToolsByParentId: Record<string, Tool[]> = {};

// Split all tools into main and sub tools
for (const tool of allTools) {
  const [parentId, subId] = tool.id.split("/");
  if (subId) {
    if (!subToolsByParentId[parentId]) {
      subToolsByParentId[parentId] = [];
    }
    subToolsByParentId[parentId].push(tool);
  } else {
    mainTools.push(tool);
  }
}

/**
 * Return the number of sub-tools for a specific tool
 */
const getNumberOfSubTools = (tool: Tool): number => {
  return subToolsByParentId[tool.id]?.length ?? 0;
};

const currentTools = mainTools.filter((x) => x.data.inToolbox == "active");
const previousTools = mainTools.filter((x) => x.data.inToolbox == "previous");
---

<DefaultPageLayout title="Tools">
  <div class="prose-content">
    <h1>Tools</h1>
    <h2>Current Toolkit</h2>
    <p>
      These are tools I actively use to build things. You can select some of
      them to see how I've configured them to my liking. Feel free to explore,
      copy and get inspired!
    </p>
    <div class="grid grid-cols-8 gap-4 mt-16">
      {
        currentTools.map((tool) => (
          <ToolsGridItem
            tool={tool}
            numberOfSubTools={getNumberOfSubTools(tool)}
          />
        ))
      }
    </div>
    <div class="mt-16">
      <h2>Previously Used</h2>
      <p>
        These are tools I've used previously but are not in active use for some
        reason. I've listed them here for historical purposes and to showcase
        how far I and the industry have come. Maybe some of them will return to
        my toolbox in the future.
      </p>
      <ul class="not-prose-content mt-8 divide-x">
        {
          previousTools.map((tool) => (
            <li class="inline-block px-2">
              <LinkOrText
                href={
                  tool.body || getNumberOfSubTools(tool)
                    ? `/tools/${tool.id}/`
                    : ""
                }
                aAttributes={{ class: "underline" }}
              >
                {tool.data.title}
              </LinkOrText>
            </li>
          ))
        }
      </ul>
    </div>
  </div>
</DefaultPageLayout>
